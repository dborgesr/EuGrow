#Euplotid ARM image

FROM openhorizon/aarch64-tx2-cudabase

USER root
WORKDIR /root

#Get Euplotid and define variables
ENV EUPLO_IMAGE=armtid
ENV EUPLO_ARDUINO=false
ENV EUPLO_RPICAM=false
ENV JUPYTER_PORT=8894
ENV WEBCAM_PORT=8895

ENV APT_PACKAGES=" \
		psmisc \
		dialog \
		apache2-utils \
		gpac \
		zip \
		git \
		vim \
		tk-dev \
		wget \
		libxml2-dev \
		curl \
		libxslt1-dev \
		libzmq3-dev \
		gfortran \
		libjpeg-dev \
		libgfortran3 \
		build-essential \
		liblapack-dev \
		libopenblas-base \
		"

RUN	apt-get update && \
	apt-get install -y --no-install-recommends $APT_PACKAGES && \
 	rm -rf "/var/lib/apt/lists/*" && \
	apt-get clean && \
	rm -rf /var/cache/apt
	
#Get conda dependencies 
COPY environment.yml /tmp/environment.yml

#Get arm7 compiled conda and create environment
RUN curl -s -L https://github.com/dborgesr/Euplotid/raw/gh-pages/conda_installers/JetsonConda-0.1-Linux-aarch64.sh > miniconda.sh && \
    bash miniconda.sh -b -p /opt/conda && \
    rm miniconda.sh && \
    export PATH=/opt/conda/bin:$PATH && \
	conda env create -f /tmp/environment.yml && \
#    conda update conda && \
#    conda update --all --yes && \
	conda clean -tipy && \
	if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi
ENV PATH=/opt/conda/envs/env/bin/:$PATH	

#set bash as default shell and add activation of environment to bash start
ENV SHELL=/bin/bash
#Set bash up to start and activate env environment
RUN echo "export PATH=/opt/conda/envs/env/bin/:$PATH" > ~/.bashrc && \
	echo "source activate env" >> ~/.bashrc

#Get pytorch machine learning
#Get kindly provided built pytorch!
RUN wget https://nvidia.box.com/shared/static/ncgzus5o23uck9i5oth2n8n06k340l6k.whl -O torch-1.4.0-cp36-cp36m-linux_aarch64.whl \
	&& pip install torch-1.4.0-cp36-cp36m-linux_aarch64.whl

#Build from source (PAINFUL)
ENV CMAKE_PREFIX_PATH=$CONDA_DIR
#RUN cd /root && git clone --recursive https://github.com/pytorch/pytorch.git && \
#	cd pytorch && \
#	git submodule update --init && \
#	pip install -r requirements.txt && \
#	python3 setup.py build develop && \
#	python3 setup.py install && \
#	python setup.py clean --all

#Install leftover stuff for pytorch + capsules + tensor monitoring
#RUN pip install --no-cache-dir \
#    visdom \
#    tqdm \
#    torchnet \
#    torchvision \
#    tensorboardx 
	
#Configure jupyter
RUN jupyter notebook --generate-config --allow-root && \
	sed -i "/c.NotebookApp.open_browser/c c.NotebookApp.open_browser = False" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.ip/c c.NotebookApp.ip = '*'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.notebook_dir/c c.NotebookApp.notebook_dir = '/root/EuGrow'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.token/c c.NotebookApp.token = 'EuGrow'" /root/.jupyter/jupyter_notebook_config.py \
        && sed -i "/c.NotebookApp.iopub_data_rate_limit/c c.NotebookApp.iopub_data_rate_limit = 10000000" /root/.jupyter/jupyter_notebook_config.py 

#set correct timezone (EST)
RUN cp /usr/share/zoneinfo/America/New_York /etc/localtime
#Get startup things
COPY ./start.sh ./applotid.py /app/
#Get repo to develop on project
#RUN cd /root && git clone -b master --single-branch https://github.com/dborgesr/EuGrow.git

RUN mkdir /root/EuGrow
WORKDIR /root/EuGrow

## Clean up (don't remove cuda libs... used by child containers)
RUN apt-get -y autoremove && apt-get -y autoclean && \
	rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
	rm -rf /var/cache/apt

EXPOSE $JUPYTER_PORT
EXPOSE $WEBCAM_PORT
CMD ["bash", "./start.sh"]